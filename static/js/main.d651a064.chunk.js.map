{"version":3,"sources":["components/previewer/Previewer.js","components/editor/Editor.js","App.js","index.js"],"names":["Previewer","_ref","getMarkdownText","react_default","a","createElement","className","id","dangerouslySetInnerHTML","Editor","appendToMarkdownString","editorText","value","onChange","text","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","state","bind","assertThisInitialized","__html","marked","sanitize","gfm","breaks","editor_Editor","previewer_Previewer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gPA0BeA,EAxBG,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,gBAChB,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,mLAKTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACZH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OACIC,UAAU,yBAEVH,EAAAC,EAAAC,cAAA,OACIE,GAAG,UACHC,wBAAyBN,SCS9BO,EAzBA,SAAAR,GAA6C,IAA1CS,EAA0CT,EAA1CS,uBAAwBC,EAAkBV,EAAlBU,WACtC,OACIR,EAAAC,EAAAC,cAAA,OACIC,UAAU,wOAKVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACXH,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OACIC,UAAU,uDAEVH,EAAAC,EAAAC,cAAA,YACIC,UAAU,8BACVC,GAAG,SACHK,MAAOD,EACPE,SAAUH,+BCdxBI,EAAI,+0BA+DKC,cApCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWFT,uBAAyB,SAACa,GACxBP,EAAKQ,SAAS,CAACb,WAAYY,EAAME,OAAOb,SAXxCI,EAAKU,MAAM,CACTf,WAAYG,GAEdE,EAAKN,uBAAyBM,EAAKN,uBAAuBiB,KAA5BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC9BA,EAAKd,gBAAkBc,EAAKd,gBAAgByB,KAArBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KANXA,iFAUZ,MAAO,CAAEa,OADOC,IAAOX,KAAKO,MAAMf,WAAY,CAACoB,UAAU,EAAMC,KAAK,EAAMC,QAAQ,sCAOlF,OACE9B,EAAAC,EAAAC,cAAA,OACEC,UAAU,wEAGVH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,mHACAF,EAAAC,EAAAC,cAAC6B,EAAD,CACExB,uBAAwBS,KAAKT,uBAC7BC,WAAYQ,KAAKO,MAAMf,aAGzBR,EAAAC,EAAAC,cAAC8B,EAAD,CACEjC,gBAAiBiB,KAAKjB,0BA9BdkC,aC1BlBC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d651a064.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Previewer = ({getMarkdownText}) => {\r\n    return(\r\n        <div \r\n            className=\"\r\n            w-90 flex flex-column items-center bg-light-green mt4 overflow-y-auto shadow-2\r\n            w-90-ns flex-ns flex-column-ns items-center-ns\r\n            w-80-l flex-l flex-column-l items-center-l\"\r\n        >\r\n             <div className=\"w-100 h2 flex justify-center items-center bg-green shadow-3\">\r\n                <p>Previewer</p>\r\n            </div>\r\n            <div \r\n                className=\"vh-100 w-100 flex pa1\"\r\n            >\r\n                <div \r\n                    id=\"preview\"\r\n                    dangerouslySetInnerHTML={getMarkdownText()}\r\n                >\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Previewer;","import React from 'react';\r\n\r\nconst Editor = ({ appendToMarkdownString, editorText } ) => {\r\n    return(\r\n        <div \r\n            className=\"\r\n            w-80 max-w-80 h-auto flex flex-column items-center bg-light-green mt4 overflow-y-auto overflow-x-hidden shadow-2\r\n            w-80-ns h-auto-ns flex-ns flex-column-ns items-center-ns\r\n            w-60-l h-auto-l flex-l flex-column-l items-center-l\"\r\n        >\r\n            <div className=\"w-100 h2 flex justify-center items-center bg-green shadow-3\">\r\n                <p>Editor</p>\r\n            </div>\r\n            <div \r\n                className=\"w-100 h-auto flex flex-column items-center shadow-2\"\r\n            >   \r\n                <textarea \r\n                    className=\"h5 w-100 bg-light-green pa1\"\r\n                    id=\"editor\"\r\n                    value={editorText}\r\n                    onChange={appendToMarkdownString}\r\n                ></textarea>\r\n            </div>       \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { Component } from 'react';\nimport Previewer from './components/previewer/Previewer.js';\nimport Editor from './components/editor/Editor.js';\nimport 'tachyons';\nimport marked from 'marked';\n\nconst text = `\n# My Heading  \n## My Subheading \nhere's a cool \\`push()\\` method \n\n\n - list item \n \n \n **nifty looking bold text** \n \n Here's a [wiki link](https://en.wikipedia.org/wiki/The_Legend_of_Zelda) for this > blockquote!\n\n > The Legend of Zelda[a] is a fantasy action-adventure video game franchise created by Japanese game designers Shigeru Miyamoto and Takashi Tezuka.\n It is primarily developed and published by Nintendo, although some portable installments and re-releases have been outsourced to Capcom, Vanpool, and Grezzo.\n The series' gameplay incorporates action-adventure and elements of action RPG games\n\\`\\`\\`\nfunction go() {\n  console.log(\"go go go\");\n}\n\\`\\`\\`\nCool Zelda Game Title Picture \n\n![Random Quote Machine](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Zelda_Logo.svg/375px-Zelda_Logo.svg.png)\n\n `\nclass App extends Component {\n  constructor() {\n    super();\n    this.state={\n      editorText: text,\n    }\n    this.appendToMarkdownString = this.appendToMarkdownString.bind(this);\n    this.getMarkdownText = this.getMarkdownText.bind(this);\n  }\n  getMarkdownText() {\n    let rawMarkup = marked(this.state.editorText, {sanitize: true, gfm: true, breaks: true});\n    return { __html: rawMarkup };\n  }\n  appendToMarkdownString = (event) => {\n    this.setState({editorText: event.target.value});\n  }\n  render() {\n    return (\n      <div \n        className=\"\n        w-100 min-vh-100 bg-lightest-blue flex flex-column items-center pb5\"\n      >\n        <h1>Welcome to My Awesome Markdown Previewer</h1>\n        <p>Enter your text in markdown format in the editor section, it will display similar to how HTML renders.</p>\n        <Editor \n          appendToMarkdownString={this.appendToMarkdownString}\n          editorText={this.state.editorText}\n         \n        /> \n        <Previewer \n          getMarkdownText={this.getMarkdownText}\n        />  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}